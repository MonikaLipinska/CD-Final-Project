{/*<div className={styles.images}>*/}
                        {/* opcjonalnie obrazy */}
                    {/*</div>*/}



                    formularz

                    Wysyłanie zapytania: W funkcji handleSubmit możesz dodać kod do wysyłania zapytania do serwera, np. za pomocą fetch:

                    const handleSubmit = (e) => {
                      e.preventDefault();
                      fetch('https://example.com/api/contact', {
                        method: 'POST',
                        headers: {
                          'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(formData)
                      })
                      .then(response => response.json())
                      .then(data => {
                        console.log('Success:', data);
                      })
                      .catch((error) => {
                        console.error('Error:', error);
                      });
                    };


                    login {/*} const handleSubmit = (e) => {
                                  e.preventDefault();
                                  localStorage.setItem('user', email);
                                  onLogin();

                              };

                              return (
                                  <div className="login">
                                      <form onSubmit={handleSubmit}>
                                          <h2>Log In</h2>
                                          <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Email"
                                                 required/>
                                          <input type="password" value={password} onChange={(e) => setPassword(e.target.value)}
                                                 placeholder="Password" required/>

                                          <button type="submit">Log In</button>

                                      </form>
                                  </div>
                              );


                          };
                          */}


                          login jsx
                          const Login = () => {
                              const [email, setEmail] = useState("");
                              const [password, setPassword] = useState("");
                              const [error, setError] = useState("");
                              const navigate = useNavigate();

                              const handleSubmit = async (e) => {
                                  e.preventDefault();

                                  const {error} = await supabase.auth.signInWithPassword({email, password,});

                                  if (error) {
                                      setError(error.message);

                                      if (error.message === "invalid login credentials") {
                                          navigate("/signup");
                                      }
                                  } else {

                                      navigate('/');
                                  }
                              };

                              return (
                                  <div className={"login"}>
                                      <h2>Login</h2>
                                      {error && <p>{error}</p>}
                                      <form onSubmit={handleSubmit}>
                                          <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Email"
                                                 required/>
                                          <input type="password" value={password} onChange={(e) => setPassword(e.target.value)}
                                                 placeholder="Password" required/>
                                          <button type="submit">Login</button>
                                      </form>
                                      <button onClick={() => navigate("/signup")}>or Sign Up</button>
                                  </div>

                              );

                          };


                          export default Login;



signup jsx
import {useState} from "react";
import '@/styles/SignUp.module.scss';
import {useNavigate} from "react-router-dom";
import {supabase} from "@/supabase.js";


const SignUp = () => {
    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");
    const [error, setError] = useState("");
    const navigate = useNavigate();

    const handleSubmit = async (e) => {
        e.preventDefault();
        const {error} = await supabase.auth.signUp({
            email,
            password,
        });
        if (error) {
            setError(error.message);
            //return
        } else {

            navigate('/login');
        }
    };

    return (
        <>
            <div className={"signup"}>
                <h2>Sign Up</h2>
                {error && <p>{error}</p>}
                <form onSubmit={handleSubmit}>
                    <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Email"
                           required/>

                    <input type="password" value={password} onChange={(e) => setPassword(e.target.value)}
                           placeholder="Password" required/>

                    <button type="submit">Sign Up</button>
                </form>

            </div>
        </>
    );

};


export default SignUp;

